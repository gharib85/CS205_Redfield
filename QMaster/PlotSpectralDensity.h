/*
 * PlotSpectralDensity.h
 *
 *  Created on: Sep 11, 2013
 *      Author: christoph
 */

#ifndef PLOTSPECTRALDENSITY_H_
#define PLOTSPECTRALDENSITY_H_

#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include "headers.h"

void plot_spectral_density(int site, int Npeaks, double* INlambda, double_complex* INgamma, const char* fn_output, double Ediffmax_invcm)
{
// output spectral density (for all cases)
   char fn[500];
   FILE *fo;
   sprintf(fn,"%s_sd_tot_site%i.dat",fn_output,site);
   fo=fopen(fn,"w");
   if (fo==NULL)
   {
      fprintf(stderr,"cannot open output parameter file \"%s\". ABORT.\n",fn);
      exit(1);
   }
   time_t t;
   time(&t);
   fprintf(fo,"# output generated by QMaster-%s on %s",INPUT_FORMAT_VERSION,ctime(&t));
   fprintf(fo,"# output: spectral density of site %i\n#\n", site);
   fprintf(fo,"# w in cm^{-1}  J(w) in cm^{-1}\n");
   double dwn=Ediffmax_invcm/4000;
   for(int i=0; i<=4000; i++) // wavenumber in cm^{-1}
   {
      double wn=i*dwn;
      double J;
      //EACH SITE HAS DIFFERENT SPECTRAL DENSITY
      J=0.0;
      for(int j=0; j<Npeaks; j++)
      {
         J+=2.0*real(INgamma[j])*INlambda[j]/const_invcmtomeV*wn*const_invcmtomeV/const_hbar/(pow(real(INgamma[j]),2.0)+pow(wn*const_invcmtomeV/const_hbar+imag(INgamma[j]),2.0));
      }
      fprintf(fo,"%e %e\n",wn,J);
   }
   fclose(fo);
}

void plot_spectral_densityRedfield(int site, int Npeaks, double* INlambda, double_complex* INgamma, const char* fn_output, double Ediffmax_invcm)
{
// output spectral density (for all cases)
   char fn[500];
   FILE *fo;
   sprintf(fn,"%s_sd_tot_site%i.dat",fn_output,site);
   fo=fopen(fn,"w");
   if (fo==NULL)
   {
      fprintf(stderr,"cannot open output parameter file \"%s\". ABORT.\n",fn);
      exit(1);
   }
   time_t t;
   time(&t);
   fprintf(fo,"# output generated by QMaster-%s on %s",INPUT_FORMAT_VERSION,ctime(&t));
   fprintf(fo,"# output: spectral density of site %i\n#\n", site);
   fprintf(fo,"# w in cm^{-1}  J(w) in cm^{-1}\n");
   double dwn=Ediffmax_invcm/4000;
   for(int i=0; i<=4000; i++) // wavenumber in cm^{-1}
   {
      double wn=i*dwn;
      double J;
      //EACH SITE HAS DIFFERENT SPECTRAL DENSITY
      J=0.0;
      for(int j=0; j<Npeaks; j++)
      {
         J+=1.0*real(INgamma[j])*INlambda[j]/const_invcmtomeV*wn*const_invcmtomeV/const_hbar/(pow(real(INgamma[j]),2.0)+pow(wn*const_invcmtomeV/const_hbar+imag(INgamma[j]),2.0));
         J+=1.0*real(INgamma[j])*INlambda[j]/const_invcmtomeV*wn*const_invcmtomeV/const_hbar/(pow(real(INgamma[j]),2.0)+pow(wn*const_invcmtomeV/const_hbar-imag(INgamma[j]),2.0));
      }
      fprintf(fo,"%e %e\n",wn,J);
   }
   fclose(fo);
}

#endif /* PLOTSPECTRALDENSITY_H_ */
